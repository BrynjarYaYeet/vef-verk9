import { getLaunch, searchLaunches } from './api.js';
import { el } from './elements.js';

/**
 * B√Ωr til leitarform.
 * @param {(e: SubmitEvent) => void} searchHandler Fall sem keyrt er √æegar leita√∞ er.
 * @param {string | undefined} query Leitarstrengur.
 * @returns {HTMLElement} Leitarform.
 */
export function renderSearchForm(searchHandler, query = undefined) {
  const form = el('form', { class: 'form' },
   el('input', { class: 'input', value: query ?? '', name: 'query'}),
   el('button', { class: 'button'}, 'Leit'));

  form.addEventListener('submit', searchHandler);

  return form;
}

/**
 * Setur ‚Äûloading state‚Äú skilaba√∞ me√∞an g√∂gn eru s√≥tt.
 * @param {HTMLElement} parentElement Element sem √° a√∞ birta skilbao√∞ √≠.
 * @param {Element | undefined} searchForm Leitarform sem √° a√∞ gera √≥virkt.
 */
function setLoading(parentElement, searchForm = undefined) {
  let loadingEl = parentElement.querySelector('.loading');

  if (!loadingEl){
    loadingEl = el('p', { class: 'loading'}, 'Leita a√∞ ni√∞urtst√∂√∞um...')
    parentElement.appendChild(loadingEl);
  }

  if (!searchForm){
    return;
  }
  const button = searchForm.querySelector('button');
  if (button) {
    button.setAttribute('disabled', 'disabled');
  }
}

/**
 * Fjarl√¶gir ‚Äûloading state‚Äú.
 * @param {HTMLElement} parentElement Element sem inniheldur skilabo√∞.
 * @param {Element | undefined} searchForm Leitarform sem √° a√∞ gera virkt.
 */
function setNotLoading(parentElement, searchForm = undefined) {
  const loading = parentElement.querySelector('.loading');

  if (loading){
    loading.remove();
  }

  if(!searchForm){
    return;
  }

  const button = searchForm.querySelector('button[disabled]');

  if (button){
    button.removeAttribute('disabled');
  }
}

/**
 * Birta ni√∞urst√∂√∞ur √∫r leit.
 * @param {import('./api.types.js').Launch[] | null} results Ni√∞urst√∂√∞ur √∫r leit
 * @param {string} query Leitarstrengur.
 */
function createSearchResults(results, query) {
  const tafla = el('table', { class: 'searchResults'});
  if(!results){
    const noResultElement = el('tr', {}, 'Villa');
    tafla.appendChild(noResultElement);
  }

  if (results.length === 0){
    const noResultElement = el('tr', {}, 'Engar ni√∞urst√∂√∞ur');
    tafla.appendChild(noResultElement);
  }

  const taflaHeader = el('tr', { class: 'resultHeader'},'Ni√∞urst√∂√∞ur √∫r leit!');
  
  tafla.appendChild(taflaHeader);
  for (const result of results){
    const resultElement = el('td', { class: 'result'},
    el('a', { class:'name', href:''}, 'Nafn: ' , result.name, ' ---- '),
    el('span', { class:'status'}, 'Sta√∞a: ', result.status.name, ' ---- '),
    el('span', { class:'mission'}, 'Mission: ', result.mission)
    );

    tafla.appendChild(resultElement);
  }
  return tafla;
}

/**
 *
 * @param {HTMLElement} parentElement Element sem √° a√∞ birta ni√∞urst√∂√∞ur √≠.
 * @param {Element} searchForm Form sem √° a√∞ gera √≥virkt.
 * @param {string} query Leitarstrengur.
 */
export async function searchAndRender(parentElement, searchForm, query) {
  const mainElement = parentElement.querySelector('main');

  if(!mainElement){
    console.warn('main element fannst ekki')
    return;
  }

  const resultElement = mainElement.querySelector('.searchResults');
  if (resultElement){
    resultElement.remove();
  }

  setLoading(mainElement, searchForm);
  const results = await searchLaunches(query);
  setNotLoading(mainElement, searchForm);

  const resultsEl = createSearchResults(results, query);

  mainElement.appendChild(resultsEl);
}

/**
 * S√Ωna fors√≠√∞u, hugsanlega me√∞ leitarni√∞urst√∂√∞um.
 * @param {HTMLElement} parentElement Element sem √° a√∞ innihalda fors√≠√∞u.
 * @param {(e: SubmitEvent) => void} searchHandler Fall sem keyrt er √æegar leita√∞ er.
 * @param {string | undefined} query Leitaror√∞, ef eitthva√∞, til a√∞ s√Ωna ni√∞urst√∂√∞ur fyrir.
 */
export function renderFrontpage(
  parentElement,
  searchHandler,
  query = undefined,
) {
  const heading = el('h1', { class: 'header'}, 'Geimskotaleitin üöÄ');
  const searchForm = renderSearchForm(searchHandler, query);
  const container = el('main', {}, heading, searchForm);
  parentElement.appendChild(container);

  if (!query) {
    return;
  }

  searchAndRender(parentElement, searchForm, query);
}

/**
 * S√Ωna geimskot.
 * @param {HTMLElement} parentElement Element sem √° a√∞ innihalda geimskot.
 * @param {string} id Au√∞kenni geimskots.
 */
export async function renderDetails(parentElement, id) {
  setLoading(parentElement);
  const result = await getLaunch(id);
  setNotLoading(parentElement);

  if (!result){
    const noResultElement = el('tr', 
    {}, 'Villa');
    parentElement.appendChild(noResultElement);
    return;
  }
  
  const container = el('main', { class:'detailMain' }, 
  el('h1', { class:'launchName'}, `${result.name}`),
  el('span', { class:'startTime'}, `${result.window_start}`),
  el('span', { class: 'endTime'}, `${result.window_end}`),
  el('span', { class: 'resultName'}, `${result.name}`),
  el('span', {  class:'resultMissionName'}, `${result.mission}`),
  el('img'), { class:'resultImg', src:`${result.image}`});


  const backElement = el(
    'div',
    { class: 'back' },
    el('a', { href: '/' }, 'Til baka'),
  );

  parentElement.appendChild(container);
  container.appendChild(backElement);

  /* TODO setja loading state og s√¶kja g√∂gn */

  // T√≥mt og villu state, vi√∞ gerum ekki greinarmun √° √æessu tvennu, ef vi√∞
  // myndum vilja gera √æa√∞ √æyrftum vi√∞ a√∞ skilgreina st√∂√∞u fyrir ni√∞urst√∂√∞u

  /* TODO √∫tf√¶ra ef g√∂gn */
}
